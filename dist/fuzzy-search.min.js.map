{"version":3,"sources":["fuzzy-search.min.js","Fuzzy-search.js"],"names":["_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","exports","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","Fuzzy","list","arguments","undefined","keys","this","Error","query","results","x","item","isMatch","push","y","propertyValues","getDescendantProperty","found","z","object","path","firstSegment","remaining","dotIndex","index","indexOf","slice","toString","call","regexp","RegExp","split","map","letter","replace","join","test"],"mappings":"AAAA,YAQA,SAASA,iBAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCANhHC,OAAOC,eAAeC,QAAS,cAC7BC,OAAO,GAGT,IAAIC,cAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,GAAIE,GAAaH,EAAMC,EAAIE,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMb,OAAOC,eAAeK,EAAQI,EAAWI,IAAKJ,IAAiB,MAAO,UAAUZ,EAAaiB,EAAYC,GAAiJ,MAA9HD,IAAYV,EAAiBP,EAAYmB,UAAWF,GAAiBC,GAAaX,EAAiBP,EAAakB,GAAqBlB,MCN3gBoB,MDUT,WCTV,QAAAA,KAAkC,GAAtBC,GAAsBC,UAAAX,QAAA,GAAAY,SAAAD,UAAA,MAAAA,UAAA,GAAXE,EAAWF,UAAAX,QAAA,GAAAY,SAAAD,UAAA,MAAAA,UAAA,EAChC,IADgCxB,gBAAA2B,KAAAL,GACb,GAAfC,EAAKV,OACP,KAAM,IAAIe,OAAM,8CAGlBD,MAAKJ,KAAOA,EACZI,KAAKD,KAAOA,ED4Gd,MA1FAlB,cAAac,IACXJ,IAAK,SACLX,MAAO,WCdP,IAAK,GAHAsB,GAAYL,UAAAX,QAAA,GAAAY,SAAAD,UAAA,GAAJ,GAAIA,UAAA,GACbM,KAEKC,EAAI,EAAGA,EAAIJ,KAAKJ,KAAKV,OAAQkB,IAAK,CACzC,GAAIC,GAAOL,KAAKJ,KAAKQ,EAErB,IAAwB,GAApBJ,KAAKD,KAAKb,QAAec,KAAKM,QAAQD,EAAMH,GAC9CC,EAAQI,KAAKF,OAEb,KAAK,GAAIG,GAAI,EAAGA,EAAIR,KAAKD,KAAKb,OAAQsB,IAAK,CAIzC,IAAK,GAHDC,GAAiBT,KAAKU,sBAAsBL,EAAML,KAAKD,KAAKS,IAC5DG,GAAQ,EAEHC,EAAI,EAAGA,EAAIH,EAAevB,OAAQ0B,IACzC,GAAIZ,KAAKM,QAAQG,EAAeG,GAAIV,GAAQ,CAC1CC,EAAQI,KAAKF,GACbM,GAAQ,CAER,OAIJ,GAAIA,EACF,OAMR,MAAOR,MDsBPZ,IAAK,wBACLX,MAAO,SCpBaiC,EAAQC,GAAiB,GACzCC,GACAC,EACAC,EACArC,EACAsC,EACAhC,EAN8BU,EAAWC,UAAAX,QAAA,GAAAY,SAAAD,UAAA,MAAAA,UAAA,EAQ7C,IAAKiB,GAaH,GAVAG,EAAWH,EAAKK,QAAQ,KAEP,KAAbF,GACFF,EAAeD,EAAKM,MAAM,EAAGH,GAC7BD,EAAYF,EAAKM,MAAMH,EAAW,IAElCF,EAAeD,EAGjBlC,EAAQiC,EAAOE,GACD,OAAVnC,GAA4BkB,SAAVlB,EACpB,GAAKoC,GAA+B,gBAAVpC,IAAuC,gBAAVA,GAEhD,GAA8C,mBAA1CH,OAAOiB,UAAU2B,SAASC,KAAK1C,GACxC,IAAKsC,EAAQ,EAAGhC,EAASN,EAAMM,OAAgBA,EAARgC,EAAgBA,IACrDlB,KAAKU,sBAAsB9B,EAAMsC,GAAQF,EAAWpB,OAE7CoB,IACThB,KAAKU,sBAAsB9B,EAAOoC,EAAWpB,OAN7CA,GAAKW,KAAK3B,OAddgB,GAAKW,KAAKM,EAyBZ,OAAOjB,MDyBPL,IAAK,UACLX,MAAO,SCvBDyB,EAAMH,GACZ,GAAIqB,GAAS,GAAIC,QAAOtB,EAAMuB,MAAM,IAAIC,IAAI,SAAAC,GAAA,MAAUA,GAAOC,QAAQ,2BAA4B,UAASC,KAAK,OAAQ,IAEvH,SAAIN,EAAOO,KAAKzB,ODiCXV,IAGThB,SAAAA,WCtHqBgB","file":"fuzzy-search.min.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Fuzzy = function () {\n  function Fuzzy() {\n    var list = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];\n    var keys = arguments.length <= 1 || arguments[1] === undefined ? [] : arguments[1];\n\n    _classCallCheck(this, Fuzzy);\n\n    if (list.length == 0) {\n      throw new Error('We need an array containing the search list');\n    }\n\n    this.list = list;\n    this.keys = keys;\n  }\n\n  _createClass(Fuzzy, [{\n    key: 'search',\n    value: function search() {\n      var query = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];\n\n      var results = [];\n\n      for (var x = 0; x < this.list.length; x++) {\n        var item = this.list[x];\n\n        if (this.keys.length == 0 && this.isMatch(item, query)) {\n          results.push(item);\n        } else {\n          for (var y = 0; y < this.keys.length; y++) {\n            var propertyValues = this.getDescendantProperty(item, this.keys[y]);\n            var found = false;\n\n            for (var z = 0; z < propertyValues.length; z++) {\n              if (this.isMatch(propertyValues[z], query)) {\n                results.push(item);\n                found = true;\n\n                break;\n              }\n            }\n\n            if (found) {\n              break;\n            }\n          }\n        }\n      }\n\n      return results;\n    }\n  }, {\n    key: 'getDescendantProperty',\n    value: function getDescendantProperty(object, path) {\n      var list = arguments.length <= 2 || arguments[2] === undefined ? [] : arguments[2];\n\n      var firstSegment;\n      var remaining;\n      var dotIndex;\n      var value;\n      var index;\n      var length;\n\n      if (!path) {\n        list.push(object);\n      } else {\n        dotIndex = path.indexOf('.');\n\n        if (dotIndex !== -1) {\n          firstSegment = path.slice(0, dotIndex);\n          remaining = path.slice(dotIndex + 1);\n        } else {\n          firstSegment = path;\n        }\n\n        value = object[firstSegment];\n        if (value !== null && value !== undefined) {\n          if (!remaining && (typeof value === 'string' || typeof value === 'number')) {\n            list.push(value);\n          } else if (Object.prototype.toString.call(value) === '[object Array]') {\n            for (index = 0, length = value.length; index < length; index++) {\n              this.getDescendantProperty(value[index], remaining, list);\n            }\n          } else if (remaining) {\n            this.getDescendantProperty(value, remaining, list);\n          }\n        }\n      }\n\n      return list;\n    }\n  }, {\n    key: 'isMatch',\n    value: function isMatch(item, query) {\n      var regexp = new RegExp(query.split('').map(function (letter) {\n        return letter.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n      }).join('.*?'), 'i');\n\n      if (regexp.test(item)) {\n        return true;\n      }\n\n      return false;\n    }\n  }]);\n\n  return Fuzzy;\n}();\n\nexports.default = Fuzzy;","export default class Fuzzy {\n  constructor(list = [], keys = []) {\n    if (list.length == 0) {\n      throw new Error('We need an array containing the search list');\n    }\n\n    this.list = list;\n    this.keys = keys;\n  }\n\n  search(query = '') {\n    var results = [];\n\n    for (var x = 0; x < this.list.length; x++) {\n      var item = this.list[x];\n\n      if (this.keys.length == 0 && this.isMatch(item, query)) {\n        results.push(item);\n      } else {\n        for (var y = 0; y < this.keys.length; y++) {\n          var propertyValues = this.getDescendantProperty(item, this.keys[y]);\n          var found = false;\n\n          for (var z = 0; z < propertyValues.length; z++) {\n            if (this.isMatch(propertyValues[z], query)) {\n              results.push(item);\n              found = true;\n\n              break;\n            }\n          }\n\n          if (found) {\n            break;\n          }\n        }\n      }\n    }\n\n    return results;\n  }\n\n  getDescendantProperty(object, path, list = []) {\n    var firstSegment;\n    var remaining;\n    var dotIndex;\n    var value;\n    var index;\n    var length;\n\n    if (!path) {\n      list.push(object)\n    } else {\n      dotIndex = path.indexOf('.')\n\n      if (dotIndex !== -1) {\n        firstSegment = path.slice(0, dotIndex)\n        remaining = path.slice(dotIndex + 1)\n      } else {\n        firstSegment = path\n      }\n\n      value = object[firstSegment]\n      if (value !== null && value !== undefined) {\n        if (!remaining && (typeof value === 'string' || typeof value === 'number')) {\n          list.push(value)\n        } else if (Object.prototype.toString.call(value) === '[object Array]') {\n          for (index = 0, length = value.length; index < length; index++) {\n            this.getDescendantProperty(value[index], remaining, list)\n          }\n        } else if (remaining) {\n          this.getDescendantProperty(value, remaining, list)\n        }\n      }\n    }\n\n    return list\n  }\n\n  isMatch(item, query) {\n    var regexp = new RegExp(query.split('').map(letter => letter.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\")).join('.*?'), 'i');\n\n    if (regexp.test(item)) {\n      return true;\n    }\n\n    return false;\n  }\n}\n"],"sourceRoot":"/source/"}