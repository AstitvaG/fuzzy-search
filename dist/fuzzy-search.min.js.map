{"version":3,"sources":["fuzzy-search.min.js","Fuzzy-search.js"],"names":["root","factory","define","amd","exports","module","FuzzySearch","this","_classCallCheck","instance","Constructor","TypeError","_typeof","Symbol","iterator","obj","constructor","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","list","arguments","undefined","keys","options","Error","extend","caseSensitive","value","query","results","x","item","isMatch","push","y","propertyValues","getDescendantProperty","found","z","output","_len","objects","Array","_key","object","hasOwnProperty","deepExtend","path","firstSegment","remaining","dotIndex","index","indexOf","slice","toString","call","regexp","RegExp","split","map","letter","replace","join","test"],"mappings":"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","file":"fuzzy-search.min.js","sourcesContent":[";(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.FuzzySearch = factory();\n  }\n}(this, function() {\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar FuzzySearch = function () {\n  function FuzzySearch() {\n    var list = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];\n    var keys = arguments.length <= 1 || arguments[1] === undefined ? [] : arguments[1];\n    var options = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\n    _classCallCheck(this, FuzzySearch);\n\n    if (list.length == 0) {\n      throw new Error('We need an array containing the search list');\n    }\n\n    this.list = list;\n    this.keys = keys;\n    this.options = FuzzySearch.extend({\n      caseSensitive: false\n    }, options);\n  }\n\n  _createClass(FuzzySearch, [{\n    key: 'search',\n    value: function search() {\n      var query = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];\n\n      var results = [];\n\n      for (var x = 0; x < this.list.length; x++) {\n        var item = this.list[x];\n\n        if (this.keys.length == 0 && FuzzySearch.isMatch(item, query, this.options.caseSensitive)) {\n          results.push(item);\n        } else {\n          for (var y = 0; y < this.keys.length; y++) {\n            var propertyValues = FuzzySearch.getDescendantProperty(item, this.keys[y]);\n            var found = false;\n\n            for (var z = 0; z < propertyValues.length; z++) {\n              if (FuzzySearch.isMatch(propertyValues[z], query, this.options.caseSensitive)) {\n                results.push(item);\n                found = true;\n\n                break;\n              }\n            }\n\n            if (found) {\n              break;\n            }\n          }\n        }\n      }\n\n      return results;\n    }\n  }], [{\n    key: 'extend',\n    value: function extend() {\n      var output = {};\n\n      for (var _len = arguments.length, objects = Array(_len), _key = 0; _key < _len; _key++) {\n        objects[_key] = arguments[_key];\n      }\n\n      for (var i = 1; i < objects.length; i++) {\n        var object = objects[i];\n\n        if (!object) {\n          continue;\n        }\n\n        for (var key in object) {\n          if (object.hasOwnProperty(key)) {\n            if (_typeof(object[key]) === 'object') {\n              output[key] = FuzzySearch.deepExtend(output[key], object[key]);\n            } else {\n              output[key] = object[key];\n            }\n          }\n        }\n      }\n\n      return output;\n    }\n  }, {\n    key: 'getDescendantProperty',\n    value: function getDescendantProperty(object, path) {\n      var list = arguments.length <= 2 || arguments[2] === undefined ? [] : arguments[2];\n\n      var firstSegment = void 0;\n      var remaining = void 0;\n      var dotIndex = void 0;\n      var value = void 0;\n      var index = void 0;\n      var length = void 0;\n\n      if (!path) {\n        list.push(object);\n      } else {\n        dotIndex = path.indexOf('.');\n\n        if (dotIndex !== -1) {\n          firstSegment = path.slice(0, dotIndex);\n          remaining = path.slice(dotIndex + 1);\n        } else {\n          firstSegment = path;\n        }\n\n        value = object[firstSegment];\n        if (value !== null && value !== undefined) {\n          if (!remaining && (typeof value === 'string' || typeof value === 'number')) {\n            list.push(value);\n          } else if (Object.prototype.toString.call(value) === '[object Array]') {\n            for (index = 0, length = value.length; index < length; index++) {\n              FuzzySearch.getDescendantProperty(value[index], remaining, list);\n            }\n          } else if (remaining) {\n            FuzzySearch.getDescendantProperty(value, remaining, list);\n          }\n        }\n      }\n\n      return list;\n    }\n  }, {\n    key: 'isMatch',\n    value: function isMatch(item, query, caseSensitive) {\n      var regexp = new RegExp(query.split('').map(function (letter) {\n        return letter.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n      }).join('.*?'), !caseSensitive ? 'i' : '');\n\n      if (regexp.test(item)) {\n        return true;\n      }\n\n      return false;\n    }\n  }]);\n\n  return FuzzySearch;\n}();\nreturn FuzzySearch;\n}));\n","class FuzzySearch {\n  constructor(list = [], keys = [], options = {}) {\n    if (list.length == 0) {\n      throw new Error('We need an array containing the search list');\n    }\n\n    this.list = list;\n    this.keys = keys;\n    this.options = FuzzySearch.extend({\n      caseSensitive: false,\n    }, options);\n  }\n\n  search(query = '') {\n    let results = [];\n\n    for (let x = 0; x < this.list.length; x++) {\n      let item = this.list[x];\n\n      if (this.keys.length == 0 && FuzzySearch.isMatch(item, query, this.options.caseSensitive)) {\n        results.push(item);\n      } else {\n        for (let y = 0; y < this.keys.length; y++) {\n          let propertyValues = FuzzySearch.getDescendantProperty(item, this.keys[y]);\n          let found = false;\n\n          for (let z = 0; z < propertyValues.length; z++) {\n            if (FuzzySearch.isMatch(propertyValues[z], query, this.options.caseSensitive)) {\n              results.push(item);\n              found = true;\n\n              break;\n            }\n          }\n\n          if (found) {\n            break;\n          }\n        }\n      }\n    }\n\n    return results;\n  }\n\n  static extend(...objects) {\n    let output = {};\n\n    for (let i = 1; i < objects.length; i++) {\n      let object = objects[i];\n\n      if (!object) {\n        continue;\n      }\n\n      for (let key in object) {\n        if (object.hasOwnProperty(key)) {\n          if (typeof object[key] === 'object') {\n            output[key] = FuzzySearch.deepExtend(output[key], object[key]);\n          } else {\n            output[key] = object[key];\n          }\n        }\n      }\n    }\n\n    return output;\n  }\n\n  static getDescendantProperty(object, path, list = []) {\n    let firstSegment;\n    let remaining;\n    let dotIndex;\n    let value;\n    let index;\n    let length;\n\n    if (!path) {\n      list.push(object)\n    } else {\n      dotIndex = path.indexOf('.')\n\n      if (dotIndex !== -1) {\n        firstSegment = path.slice(0, dotIndex)\n        remaining = path.slice(dotIndex + 1)\n      } else {\n        firstSegment = path\n      }\n\n      value = object[firstSegment]\n      if (value !== null && value !== undefined) {\n        if (!remaining && (typeof value === 'string' || typeof value === 'number')) {\n          list.push(value)\n        } else if (Object.prototype.toString.call(value) === '[object Array]') {\n          for (index = 0, length = value.length; index < length; index++) {\n            FuzzySearch.getDescendantProperty(value[index], remaining, list)\n          }\n        } else if (remaining) {\n          FuzzySearch.getDescendantProperty(value, remaining, list)\n        }\n      }\n    }\n\n    return list\n  }\n\n  static isMatch(item, query, caseSensitive) {\n    let regexp = new RegExp(query.split('').map(letter => letter.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\")).join('.*?'), !caseSensitive ? 'i' : '');\n\n    if (regexp.test(item)) {\n      return true;\n    }\n\n    return false;\n  }\n}\n"],"sourceRoot":"/source/"}