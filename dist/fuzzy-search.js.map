{"version":3,"sources":["Fuzzy-search.js"],"names":[],"mappings":";;;;;;IAAM,W;AACJ,yBAAgD;AAAA,QAApC,IAAoC,yDAA7B,EAA6B;AAAA,QAAzB,IAAyB,yDAAlB,EAAkB;AAAA,QAAd,OAAc,yDAAJ,EAAI;;AAAA;;AAC9C,QAAI,KAAK,MAAL,IAAe,CAAnB,EAAsB;AACpB,YAAM,IAAI,KAAJ,CAAU,6CAAV,CAAN;AACD;;AAED,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,OAAL,GAAe,YAAY,MAAZ,CAAmB;AAChC,qBAAe,KADiB;AAEhC,YAAM;AAF0B,KAAnB,EAGZ,OAHY,CAAf;AAID;;;;6BAEkB;AAAA,UAAZ,KAAY,yDAAJ,EAAI;;AACjB,UAAI,UAAU,EAAd;;AAEA,UAAI,SAAS,EAAb,EAAiB;AACf,eAAO,KAAK,IAAZ;AACD;;AAED,WAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,KAAK,IAAL,CAAU,MAA9B,EAAsC,GAAtC,EAA2C;AACzC,YAAI,OAAO,KAAK,IAAL,CAAU,CAAV,CAAX;;AAEA,YAAI,KAAK,IAAL,CAAU,MAAV,IAAoB,CAAxB,EAA2B;AACzB,cAAI,QAAQ,YAAY,OAAZ,CAAoB,IAApB,EAA0B,KAA1B,EAAiC,KAAK,OAAL,CAAa,aAA9C,CAAZ;;AAEA,cAAI,KAAJ,EAAW;AACT,oBAAQ,IAAR,CAAa;AACX,wBADW;AAEX;AAFW,aAAb;AAID;AACF,SATD,MASO;AACL,oBAAU,KAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,KAAK,IAAL,CAAU,MAA9B,EAAsC,GAAtC,EAA2C;AACnD,gBAAI,iBAAiB,YAAY,qBAAZ,CAAkC,IAAlC,EAAwC,KAAK,IAAL,CAAU,CAAV,CAAxC,CAArB;;AAEA,iBAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,eAAe,MAAnC,EAA2C,GAA3C,EAAgD;AAC9C,kBAAI,SAAQ,YAAY,OAAZ,CAAoB,eAAe,CAAf,CAApB,EAAuC,KAAvC,EAA8C,KAAK,OAAL,CAAa,aAA3D,CAAZ;;AAEA,kBAAI,MAAJ,EAAW;AACT,wBAAQ,IAAR,CAAa;AACX,4BADW;AAEX;AAFW,iBAAb;;AAKA,sBAAM,QAAN;AACD;AACF;AACF;AACF;AACF;;AAED,UAAI,KAAK,OAAL,CAAa,IAAjB,EAAuB;AACrB,gBAAQ,IAAR,CAAa,UAAC,CAAD,EAAI,CAAJ,EAAU;AACrB,iBAAO,EAAE,KAAF,GAAU,EAAE,KAAnB;AACD,SAFD;AAGD;;AAED,aAAO,QAAQ,GAAR,CAAY,UAAC,MAAD,EAAY;AAC7B,eAAO,OAAO,IAAd;AACD,OAFM,CAAP;AAGD;;;6BAEyB;AACxB,UAAI,SAAS,EAAb;;AADwB,wCAAT,OAAS;AAAT,eAAS;AAAA;;AAGxB,WAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,QAAQ,MAA5B,EAAoC,GAApC,EAAyC;AACvC,YAAI,SAAS,QAAQ,CAAR,CAAb;;AAEA,aAAK,IAAI,QAAT,IAAqB,MAArB,EAA6B;AAC3B,cAAI,OAAO,SAAP,CAAiB,cAAjB,CAAgC,IAAhC,CAAqC,MAArC,EAA6C,QAA7C,CAAJ,EAA4D;AAC1D,gBAAI,OAAO,SAAP,CAAiB,QAAjB,CAA0B,IAA1B,CAA+B,OAAO,QAAP,CAA/B,MAAqD,iBAAzD,EAA4E;AAC1E,qBAAO,QAAP,IAAmB,YAAY,MAAZ,CAAmB,OAAO,QAAP,CAAnB,EAAqC,OAAO,QAAP,CAArC,CAAnB;AACD,aAFD,MAEO;AACL,qBAAO,QAAP,IAAmB,OAAO,QAAP,CAAnB;AACD;AACF;AACF;AACF;;AAED,aAAO,MAAP;AACD;;;0CAE4B,M,EAAQ,I,EAAiB;AAAA,UAAX,IAAW,yDAAJ,EAAI;;AACpD,UAAI,qBAAJ;AACA,UAAI,kBAAJ;AACA,UAAI,iBAAJ;AACA,UAAI,cAAJ;AACA,UAAI,cAAJ;AACA,UAAI,eAAJ;;AAEA,UAAI,CAAC,IAAL,EAAW;AACT,aAAK,IAAL,CAAU,MAAV;AACD,OAFD,MAEO;AACL,mBAAW,KAAK,OAAL,CAAa,GAAb,CAAX;;AAEA,YAAI,aAAa,CAAC,CAAlB,EAAqB;AACnB,yBAAe,KAAK,KAAL,CAAW,CAAX,EAAc,QAAd,CAAf;AACA,sBAAY,KAAK,KAAL,CAAW,WAAW,CAAtB,CAAZ;AACD,SAHD,MAGO;AACL,yBAAe,IAAf;AACD;;AAED,gBAAQ,OAAO,YAAP,CAAR;AACA,YAAI,UAAU,IAAV,IAAkB,UAAU,SAAhC,EAA2C;AACzC,cAAI,CAAC,SAAD,KAAe,OAAO,KAAP,KAAiB,QAAjB,IAA6B,OAAO,KAAP,KAAiB,QAA7D,CAAJ,EAA4E;AAC1E,iBAAK,IAAL,CAAU,KAAV;AACD,WAFD,MAEO,IAAI,OAAO,SAAP,CAAiB,QAAjB,CAA0B,IAA1B,CAA+B,KAA/B,MAA0C,gBAA9C,EAAgE;AACrE,iBAAK,QAAQ,CAAR,EAAW,SAAS,MAAM,MAA/B,EAAuC,QAAQ,MAA/C,EAAuD,OAAvD,EAAgE;AAC9D,0BAAY,qBAAZ,CAAkC,MAAM,KAAN,CAAlC,EAAgD,SAAhD,EAA2D,IAA3D;AACD;AACF,WAJM,MAIA,IAAI,SAAJ,EAAe;AACpB,wBAAY,qBAAZ,CAAkC,KAAlC,EAAyC,SAAzC,EAAoD,IAApD;AACD;AACF;AACF;;AAED,aAAO,IAAP;AACD;;;4BAEc,I,EAAM,K,EAAO,a,EAAe;AACzC,UAAI,CAAC,aAAL,EAAoB;AAClB,eAAO,KAAK,iBAAL,EAAP;AACA,gBAAQ,MAAM,iBAAN,EAAR;AACD;;AAED,UAAI,QAAQ,CAAZ;AACA,UAAI,UAAU,EAAd;AACA,UAAI,UAAU,MAAM,KAAN,CAAY,EAAZ,CAAd;;AAEA,WAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,QAAQ,MAA5B,EAAoC,GAApC,EAAyC;AACvC,YAAI,SAAS,QAAQ,CAAR,CAAb;;AAEA,gBAAQ,KAAK,OAAL,CAAa,MAAb,EAAqB,KAArB,CAAR;;AAEA,YAAI,SAAS,CAAC,CAAd,EAAiB;AACf,iBAAO,KAAP;AACD;;AAED,gBAAQ,IAAR,CAAa,KAAb;;AAEA;AACD;;AAED,UAAI,QAAQ,CAAZ;;AAEA,WAAK,IAAI,MAAI,CAAb,EAAgB,MAAI,QAAQ,MAA5B,EAAoC,KAApC,EAAyC;AACvC,YAAI,OAAK,QAAQ,MAAR,GAAiB,CAA1B,EAA6B;AAC3B,mBAAS,QAAQ,MAAI,CAAZ,IAAiB,QAAQ,GAAR,CAA1B;AACD;AACF;;AAED,aAAO,KAAP;AACD","file":"fuzzy-search.js","sourcesContent":["class FuzzySearch {\r\n  constructor(list = [], keys = [], options = {}) {\r\n    if (list.length == 0) {\r\n      throw new Error('We need an array containing the search list');\r\n    }\r\n\r\n    this.list = list;\r\n    this.keys = keys;\r\n    this.options = FuzzySearch.extend({\r\n      caseSensitive: false,\r\n      sort: false,\r\n    }, options);\r\n  }\r\n\r\n  search(query = '') {\r\n    let results = [];\r\n\r\n    if (query == '') {\r\n      return this.list;\r\n    }\r\n\r\n    for (let x = 0; x < this.list.length; x++) {\r\n      let item = this.list[x];\r\n\r\n      if (this.keys.length == 0) {\r\n        let score = FuzzySearch.isMatch(item, query, this.options.caseSensitive);\r\n\r\n        if (score) {\r\n          results.push({\r\n            item,\r\n            score,\r\n          });\r\n        }\r\n      } else {\r\n        keysLoop: for (let y = 0; y < this.keys.length; y++) {\r\n          let propertyValues = FuzzySearch.getDescendantProperty(item, this.keys[y]);\r\n\r\n          for (let z = 0; z < propertyValues.length; z++) {\r\n            let score = FuzzySearch.isMatch(propertyValues[z], query, this.options.caseSensitive);\r\n\r\n            if (score) {\r\n              results.push({\r\n                item,\r\n                score,\r\n              });\r\n\r\n              break keysLoop;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.options.sort) {\r\n      results.sort((a, b) => {\r\n        return a.score - b.score;\r\n      });\r\n    }\r\n\r\n    return results.map((result) => {\r\n      return result.item;\r\n    });\r\n  }\r\n\r\n  static extend(...objects) {\r\n    let target = {};\r\n\r\n    for (let x = 0; x < objects.length; x++) {\r\n      let object = objects[x];\r\n\r\n      for (let property in object) {\r\n        if (Object.prototype.hasOwnProperty.call(object, property)) {\r\n          if (Object.prototype.toString.call(object[property]) === '[object Object]') {\r\n            target[property] = FuzzySearch.extend(target[property], object[property]);\r\n          } else {\r\n            target[property] = object[property];\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return target;\r\n  }\r\n\r\n  static getDescendantProperty(object, path, list = []) {\r\n    let firstSegment;\r\n    let remaining;\r\n    let dotIndex;\r\n    let value;\r\n    let index;\r\n    let length;\r\n\r\n    if (!path) {\r\n      list.push(object)\r\n    } else {\r\n      dotIndex = path.indexOf('.')\r\n\r\n      if (dotIndex !== -1) {\r\n        firstSegment = path.slice(0, dotIndex)\r\n        remaining = path.slice(dotIndex + 1)\r\n      } else {\r\n        firstSegment = path\r\n      }\r\n\r\n      value = object[firstSegment]\r\n      if (value !== null && value !== undefined) {\r\n        if (!remaining && (typeof value === 'string' || typeof value === 'number')) {\r\n          list.push(value)\r\n        } else if (Object.prototype.toString.call(value) === '[object Array]') {\r\n          for (index = 0, length = value.length; index < length; index++) {\r\n            FuzzySearch.getDescendantProperty(value[index], remaining, list)\r\n          }\r\n        } else if (remaining) {\r\n          FuzzySearch.getDescendantProperty(value, remaining, list)\r\n        }\r\n      }\r\n    }\r\n\r\n    return list\r\n  }\r\n\r\n  static isMatch(item, query, caseSensitive) {\r\n    if (!caseSensitive) {\r\n      item = item.toLocaleLowerCase();\r\n      query = query.toLocaleLowerCase();\r\n    }\r\n\r\n    let index = 0;\r\n    let indexes = [];\r\n    let letters = query.split('');\r\n\r\n    for (let x = 0; x < letters.length; x++) {\r\n      let letter = letters[x];\r\n\r\n      index = item.indexOf(letter, index);\r\n\r\n      if (index == -1) {\r\n        return false;\r\n      }\r\n\r\n      indexes.push(index);\r\n\r\n      index++;\r\n    }\r\n\r\n    let score = 1;\r\n\r\n    for (let x = 0; x < indexes.length; x++) {\r\n      if (x != indexes.length - 1) {\r\n        score += indexes[x + 1] - indexes[x];\r\n      }\r\n    }\r\n\r\n    return score;\r\n  }\r\n}\r\n"],"sourceRoot":"/source/"}